openapi: 3.0.0
info:
  description: This is User API
  version: "1.0"
  title: User API
tags: []
paths:
  /users:
    get:
      operationId: findUsers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
      responses:
        default:
          description: successful operation
    post:
      operationId: createUser
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        "200":
          description: successful operation
          content:
            application/json;charset=UTF-8:
              schema:
                type: integer
                format: int64
  "/users/{userId}":
    get:
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User Model
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    put:
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/User"
      responses:
        default:
          description: successful operation
    delete:
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: successful operation
servers:
  - url: http://localhost:8080/
components:
  requestBodies:
    User:
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: "#/components/schemas/User"
  schemas:
    User:
      type: object
      required:
        - age
        - createdAt
        - gender
        - id
        - isMember
        - name
        - updatedAt
      properties:
        createdAt:
          type: integer
          format: int64
        updatedAt:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 1
          maxLength: 20
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNKNOWN
        age:
          type: integer
          format: int32
          minimum: 1900
        isMember:
          type: boolean
